{
  "id": "cka-i-003",
  "title": "Static Pods Configuration",
  "description": "Configure static pods on a worker node to run critical system components. Your tasks are:\n\n1. Create a static pod manifest for a ||monitoring-agent|| on node ||worker-node-01||\n2. The static pod should:\n   - Use image ||prometheus/node-exporter:latest||\n   - Mount the host's ||/proc|| directory to ||/host/proc|| (read-only)\n   - Mount the host's ||/sys|| directory to ||/host/sys|| (read-only)\n   - Expose container port ||9100||\n   - Run with ||hostNetwork: true||\n3. Place the manifest in the correct static pod directory ||/etc/kubernetes/manifests/||\n4. Verify the static pod is running and managed by the kubelet\n5. Ensure the pod cannot be deleted using kubectl (characteristic of static pods)",
  "points": 8,
  "timeLimit": 15,
  "category": "Static Pods",
  "tags": [
    "static-pods",
    "kubelet",
    "host-network",
    "volume-mounts",
    "intermediate"
  ],
  "infrastructure": {
    "namespaces": [],
    "resources": [
      "static-pods"
    ],
    "prerequisites": [
      "worker-node-01 available",
      "SSH access to worker nodes"
    ]
  },
  "solution": {
    "steps": [
      "1. SSH to the worker node:",
      "   ssh worker-node-01",
      "2. Check static pod directory:",
      "   ls /etc/kubernetes/manifests/",
      "3. Create static pod manifest:",
      "   sudo tee /etc/kubernetes/manifests/monitoring-agent.yaml <<EOF",
      "   apiVersion: v1",
      "   kind: Pod",
      "   metadata:",
      "     name: monitoring-agent",
      "     namespace: kube-system",
      "   spec:",
      "     hostNetwork: true",
      "     containers:",
      "     - name: node-exporter",
      "       image: prometheus/node-exporter:latest",
      "       ports:",
      "       - containerPort: 9100",
      "       volumeMounts:",
      "       - name: proc",
      "         mountPath: /host/proc",
      "         readOnly: true",
      "       - name: sys",
      "         mountPath: /host/sys",
      "         readOnly: true",
      "     volumes:",
      "     - name: proc",
      "       hostPath:",
      "         path: /proc",
      "     - name: sys",
      "       hostPath:",
      "         path: /sys",
      "   EOF",
      "4. Wait for kubelet to detect and start the pod:",
      "   sleep 30",
      "5. Verify static pod is running:",
      "   kubectl get pods -n kube-system | grep monitoring-agent",
      "6. Try to delete the pod (should fail or recreate immediately):",
      "   kubectl delete pod monitoring-agent-worker-node-01 -n kube-system"
    ]
  },
  "validations": [
    {
      "command": "kubectl get pod -n kube-system | grep monitoring-agent-worker-node-01",
      "expected": "monitoring-agent-worker-node-01.*Running",
      "points": 3,
      "description": "Static pod should be running with node name suffix"
    },
    {
      "command": "kubectl get pod monitoring-agent-worker-node-01 -n kube-system -o jsonpath='{.spec.hostNetwork}'",
      "expected": "true",
      "points": 1,
      "description": "Static pod should use host network"
    },
    {
      "command": "kubectl get pod monitoring-agent-worker-node-01 -n kube-system -o jsonpath='{.spec.containers[0].ports[0].containerPort}'",
      "expected": "9100",
      "points": 1,
      "description": "Container should expose port 9100"
    },
    {
      "command": "kubectl get pod monitoring-agent-worker-node-01 -n kube-system -o jsonpath='{.spec.volumes[0].hostPath.path}'",
      "expected": "/proc",
      "points": 1,
      "description": "Should mount /proc from host"
    },
    {
      "command": "kubectl get pod monitoring-agent-worker-node-01 -n kube-system -o jsonpath='{.metadata.ownerReferences[0].kind}'",
      "expected": "Node",
      "points": 2,
      "description": "Static pod should be owned by Node (managed by kubelet)"
    }
  ]
}