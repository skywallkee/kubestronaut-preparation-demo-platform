{
  "id": "ckad-i-008",
  "title": "Health Checks (Liveness and Readiness Probes)",
  "description": "Create a Deployment named ||health-app|| in namespace ||venus|| with comprehensive health checks:\n\n**Application Specs:**\n- Image: ||nginx:1.21||\n- Replicas: ||2||\n- Container port: ||80||\n\n**Liveness Probe:**\n- Type: ||HTTP GET||\n- Path: ||/||\n- Port: ||80||\n- Initial delay: ||30|| seconds\n- Period: ||10|| seconds\n- Failure threshold: ||3||\n\n**Readiness Probe:**\n- Type: ||HTTP GET||\n- Path: ||/||\n- Port: ||80||\n- Initial delay: ||5|| seconds\n- Period: ||5|| seconds\n- Failure threshold: ||2||\n\n**Startup Probe:**\n- Type: ||HTTP GET||\n- Path: ||/||\n- Port: ||80||\n- Initial delay: ||10|| seconds\n- Period: ||5|| seconds\n- Failure threshold: ||6||\n\nVerify all probes are configured correctly and the deployment is healthy.",
  "points": 8,
  "timeLimit": 15,
  "category": "Health Checks",
  "tags": [
    "liveness-probe",
    "readiness-probe",
    "startup-probe",
    "health-checks",
    "deployment",
    "intermediate"
  ],
  "infrastructure": {
    "namespaces": [
      "venus"
    ],
    "resources": [
      "deployments"
    ],
    "prerequisites": []
  },
  "solution": {
    "steps": [
      "1. Create Deployment with health checks:",
      "   cat <<EOF > health-app.yaml",
      "   apiVersion: apps/v1",
      "   kind: Deployment",
      "   metadata:",
      "     name: health-app",
      "     namespace: venus",
      "   spec:",
      "     replicas: 2",
      "     selector:",
      "       matchLabels:",
      "         app: health-app",
      "     template:",
      "       metadata:",
      "         labels:",
      "           app: health-app",
      "       spec:",
      "         containers:",
      "         - name: nginx",
      "           image: nginx:1.21",
      "           ports:",
      "           - containerPort: 80",
      "           livenessProbe:",
      "             httpGet:",
      "               path: /",
      "               port: 80",
      "             initialDelaySeconds: 30",
      "             periodSeconds: 10",
      "             failureThreshold: 3",
      "           readinessProbe:",
      "             httpGet:",
      "               path: /",
      "               port: 80",
      "             initialDelaySeconds: 5",
      "             periodSeconds: 5",
      "             failureThreshold: 2",
      "           startupProbe:",
      "             httpGet:",
      "               path: /",
      "               port: 80",
      "             initialDelaySeconds: 10",
      "             periodSeconds: 5",
      "             failureThreshold: 6",
      "   EOF",
      "2. Apply the Deployment:",
      "   kubectl apply -f health-app.yaml",
      "3. Wait for deployment to be ready:",
      "   kubectl rollout status deployment/health-app -n venus --timeout=120s",
      "4. Verify probe configuration:",
      "   kubectl describe deployment health-app -n venus",
      "5. Check pod health status:",
      "   kubectl get pods -n venus -l app=health-app"
    ]
  },
  "validations": [
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.spec.replicas}'",
      "expected": "2",
      "points": 1,
      "description": "Deployment should have 2 replicas"
    },
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.spec.template.spec.containers[0].livenessProbe.httpGet.path}'",
      "expected": "/",
      "points": 1,
      "description": "Liveness probe should check root path"
    },
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.spec.template.spec.containers[0].livenessProbe.initialDelaySeconds}'",
      "expected": "30",
      "points": 1,
      "description": "Liveness probe should have 30s initial delay"
    },
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.spec.template.spec.containers[0].readinessProbe.initialDelaySeconds}'",
      "expected": "5",
      "points": 1,
      "description": "Readiness probe should have 5s initial delay"
    },
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.spec.template.spec.containers[0].readinessProbe.periodSeconds}'",
      "expected": "5",
      "points": 1,
      "description": "Readiness probe should check every 5s"
    },
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.spec.template.spec.containers[0].startupProbe.failureThreshold}'",
      "expected": "6",
      "points": 1,
      "description": "Startup probe should have failure threshold of 6"
    },
    {
      "command": "kubectl get deployment health-app -n venus -o jsonpath='{.status.readyReplicas}'",
      "expected": "2",
      "points": 2,
      "description": "All replicas should be ready and healthy"
    }
  ]
}